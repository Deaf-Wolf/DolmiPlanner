@page "/events"
@using DemoApiLib
@using DemoApiLib.Models.ApiModels
@inject DemoApiClientService apiClient
@inject NavigationManager NavigationManager

<h3>Event List</h3>

@if (events == null)
{
    <p>Loading...</p>
}
else if (!events.Any())
{
    <p>No events found.</p>
    <button type="button" class="btn btn-primary" @onclick="NavigateToAdd">Add Event</button>
}
else
{
    <button type="button" class="btn btn-primary mb-3" @onclick="NavigateToAdd">Add Event</button>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Date</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Event Type</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var evt in events)
            {
                <tr>
                    <td>@evt.Title</td>
                    <td>@evt.EventDate.ToString("d")</td>
                    <td>@evt.StartTime.ToString("t")</td>
                    <td>@evt.EndTime.ToString("t")</td>
                    <td>@evt.Eventtype</td>
                    <td>@evt.Description</td>
                    <td>
                        <button class="btn btn-secondary btn-sm" @onclick="() => NavigateToEdit(evt.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => Delete(evt.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Event> events;

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        events = await apiClient.GetAllEvents();
    }

    private void NavigateToAdd()
    {
        NavigationManager.NavigateTo("/eventsAdd");
    }

    private void NavigateToEdit(Guid eventId)
    {
        NavigationManager.NavigateTo($"/eventsAdd/{eventId}");
    }

    private async Task Delete(Guid eventId)
    {
        await apiClient.DeleteEvent(eventId);
        await LoadEvents();
    }
}