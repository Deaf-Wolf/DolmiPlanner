@using DemoApiLib
@using DemoApiLib.Models.ApiModels
@using DemoSite.Content.Scheduler
@using System.Globalization

@inject DemoApiClientService apiClient


<div class="week-view">
    <div class="date-header-row">
        @for (int i = 0; i < DateMax; i++)
        {
            var currentDate = StartDate.AddDays(i);
            <div class="date-header">
                @currentDate.ToString("dddd, MMM d")
            </div>
        }
    </div>
    <div class="day-columns-container">
        @for (int i = 0; i < DateMax; i++)
        {
            var currentDate = StartDate.AddDays(i);
            var showTime = i == 0; // Show time only for the first day

            <div class="day-column">
                <DayView ShowTime="@showTime" Events="@(GetEventsForDate(currentDate))" CurrentDate="@currentDate" />
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int DateMax { get; set; } = 7;
    [Parameter]
    public DateOnly StartDate { get; set; } = DateOnly.FromDateTime(DateTime.Today).AddDays(-(int)DateTime.Today.DayOfWeek);

    private List<Event> eventsForWeek;

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        eventsForWeek = await apiClient.GetAllEvents();
        StateHasChanged();
    }

    private List<Event> GetEventsForDate(DateOnly date)
    {
        return eventsForWeek?.Where(evt => evt.EventDate == date).ToList() ?? new List<Event>();
    }

}